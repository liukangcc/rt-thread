name: RT-Thread

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  # Runs at 16:00 UTC (BeiJing 00:00) on the 1st of every month
  schedule:
    - cron:  '0 16 1 * *'
  push:
    branches:
      - utest
    paths-ignore:
      - documentation/**
      - '**/README.md'
      - '**/README_zh.md'
  pull_request:
    branches:
      - utest
    paths-ignore:
      - documentation/**
      - '**/README.md'
      - '**/README_zh.md'

jobs:
  build:
    runs-on: ubuntu-latest
    name: ${{ matrix.legs.UTEST }}
    strategy:
      fail-fast: false
      matrix:
       legs:
         - {UTEST: "components", RTT_BSP: "stm32/stm32f429-atk-apollo", QEMU_ARCH: "stm32f429-atk-apollo", CONFIG_FILE: "utest/components/rtconfig.h"}
         - {UTEST: "lwip", RTT_BSP: "stm32/stm32f429-atk-apollo", QEMU_ARCH: "stm32f429-atk-apollo", CONFIG_FILE: "utest/components/rtconfig.h"}
         - {UTEST: "net", RTT_BSP: "stm32/stm32f429-atk-apollo", QEMU_ARCH: "stm32f429-atk-apollo", CONFIG_FILE: "utest/components/rtconfig.h"}
         - {UTEST: "filesystem", RTT_BSP: "stm32/stm32f429-atk-apollo", QEMU_ARCH: "stm32f429-atk-apollo", CONFIG_FILE: "utest/components/rtconfig.h"}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: 3.9

      - name: Install Tools
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get -qq install gcc-multilib libsdl-dev scons
          echo "RTT_ROOT=${{ github.workspace }}" >> $GITHUB_ENV
          echo "RTT_CC=gcc" >> $GITHUB_ENV
 
      - name: Install Arm ToolChains
        shell: bash
        run: |
          wget -q https://github.com/RT-Thread/toolchains-ci/releases/download/arm-2017q2-v6/gcc-arm-none-eabi-6-2017-q2-update-linux.tar.bz2
          sudo tar xjf gcc-arm-none-eabi-6-2017-q2-update-linux.tar.bz2 -C /opt
          /opt/gcc-arm-none-eabi-6-2017-q2-update/bin/arm-none-eabi-gcc --version
          echo "RTT_EXEC_PATH=/opt/gcc-arm-none-eabi-6-2017-q2-update/bin" >> $GITHUB_ENV

      - name: Bsp Scons Compile
        if: ${{ success() }}
        shell: bash
        env:
          RTT_BSP: ${{ matrix.legs.RTT_BSP }}
          RTT_TOOL_CHAIN: 'sourcery-arm'
        run: |
          mv ${{ matrix.legs.CONFIG_FILE }} bsp/$RTT_BSP/
          scons -C bsp/$RTT_BSP

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Run Utest
        shell: bash
        run: |
          docker pull ${{ secrets.DOCKERHUB_REPO }}
          docker run -v "`pwd`:/rt-thread" -i ${{ secrets.DOCKERHUB_REPO }} bash -c "ls -al"      
      
